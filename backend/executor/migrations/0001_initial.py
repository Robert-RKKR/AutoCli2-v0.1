# Generated by Django 4.1.4 on 2023-03-05 09:37

import autocli2.base.validators.base_validator
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('connector', '0001_initial'),
        ('inventory', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Snapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='DataTimeModel create date.', verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, help_text='DataTimeModel last update date.', verbose_name='Updated')),
                ('name', models.CharField(error_messages={'blank': 'Name field is mandatory.', 'invalid': 'Enter the correct name value. It must contain 3 to 64 digits, letters or special characters -, _ or spaces.', 'null': 'Name field is mandatory.', 'unique': 'IdentificationModel with this name already exists.'}, help_text='IdentificationModel name.', max_length=64, unique=True, validators=[autocli2.base.validators.base_validator.NameValueValidator()], verbose_name='Name')),
                ('slug', models.CharField(help_text='IdentificationModel name representation (Slug).', max_length=64, unique=True, verbose_name='Slug')),
                ('description', models.CharField(blank=True, default='IdentificationModel default description.', error_messages={'invalid': 'Enter the correct description value. It must contain 8 to 256 digits, letters and special characters -, _, . or spaces.'}, help_text='IdentificationModel description.', max_length=256, null=True, validators=[autocli2.base.validators.base_validator.DescriptionValueValidator()], verbose_name='Description')),
                ('ico', models.IntegerField(default=1, help_text='IdentificationModel graphical representation.', verbose_name='IdentificationModel ico')),
                ('is_deleted', models.BooleanField(default=False, help_text='Is StatusModel deleted (Deleted StatusModel is reserved for backward compatibility).', verbose_name='Deleted')),
                ('is_root', models.BooleanField(default=False, help_text='Is StatusModel root (Root StatusModel cannot be deleted or modify).', verbose_name='Root')),
                ('is_active', models.BooleanField(default=True, help_text='Is StatusModel active (Inactive StatusModel has limited functionality).', verbose_name='Active')),
                ('administrator', models.ForeignKey(blank=True, help_text='Administrator responsible for provided AdministratorModel.', null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Administrator')),
            ],
            options={
                'verbose_name': 'Snapshot',
                'verbose_name_plural': 'Snapshots',
            },
        ),
        migrations.CreateModel(
            name='Executor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='DataTimeModel create date.', verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, help_text='DataTimeModel last update date.', verbose_name='Updated')),
                ('name', models.CharField(error_messages={'blank': 'Name field is mandatory.', 'invalid': 'Enter the correct name value. It must contain 3 to 64 digits, letters or special characters -, _ or spaces.', 'null': 'Name field is mandatory.', 'unique': 'IdentificationModel with this name already exists.'}, help_text='IdentificationModel name.', max_length=64, unique=True, validators=[autocli2.base.validators.base_validator.NameValueValidator()], verbose_name='Name')),
                ('slug', models.CharField(help_text='IdentificationModel name representation (Slug).', max_length=64, unique=True, verbose_name='Slug')),
                ('description', models.CharField(blank=True, default='IdentificationModel default description.', error_messages={'invalid': 'Enter the correct description value. It must contain 8 to 256 digits, letters and special characters -, _, . or spaces.'}, help_text='IdentificationModel description.', max_length=256, null=True, validators=[autocli2.base.validators.base_validator.DescriptionValueValidator()], verbose_name='Description')),
                ('ico', models.IntegerField(default=1, help_text='IdentificationModel graphical representation.', verbose_name='IdentificationModel ico')),
                ('is_deleted', models.BooleanField(default=False, help_text='Is StatusModel deleted (Deleted StatusModel is reserved for backward compatibility).', verbose_name='Deleted')),
                ('is_root', models.BooleanField(default=False, help_text='Is StatusModel root (Root StatusModel cannot be deleted or modify).', verbose_name='Root')),
                ('is_active', models.BooleanField(default=True, help_text='Is StatusModel active (Inactive StatusModel has limited functionality).', verbose_name='Active')),
                ('execution_protocol', models.IntegerField(choices=[(1, 'SSH'), (2, 'HTTP')], default=1, help_text='Network protocol used to execute the connection template (SSH / HTTP).', verbose_name='Execution protocol')),
                ('executor_type', models.IntegerField(choices=[(1, 'Task'), (2, 'Template/s')], default=1, help_text='Xxx.', verbose_name='Executor type')),
                ('task', models.IntegerField(choices=[(1, 'Task one'), (2, 'Task Two')], default=0, help_text='Xxx.', verbose_name='Task')),
                ('task_arguments', models.JSONField(blank=True, help_text='Xxx.', null=True, verbose_name='Task arguments')),
                ('status', models.IntegerField(choices=[(1, 'Initiation'), (2, 'Execution'), (3, 'Executed')], default=0, help_text='Xxx.', verbose_name='Status')),
                ('output', models.JSONField(blank=True, help_text='Xxx.', null=True, verbose_name='Output')),
                ('results', models.BooleanField(default=False, help_text='Xxx.', verbose_name='Results')),
                ('administrator', models.ForeignKey(blank=True, help_text='Administrator responsible for provided AdministratorModel.', null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Administrator')),
                ('connection_templates', models.ManyToManyField(blank=True, help_text='Xxx.', to='connector.connectiontemplate', verbose_name='Connection templates')),
                ('credential', models.ForeignKey(blank=True, help_text='Xxx.', null=True, on_delete=django.db.models.deletion.PROTECT, to='inventory.credential', verbose_name='Credential')),
                ('hosts', models.ManyToManyField(blank=True, help_text='Xxx.', to='inventory.host', verbose_name='Hosts')),
            ],
            options={
                'verbose_name': 'Executor',
                'verbose_name_plural': 'Executors',
            },
        ),
        migrations.CreateModel(
            name='Execution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='DataTimeModel create date.', verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, help_text='DataTimeModel last update date.', verbose_name='Updated')),
                ('result_status', models.BooleanField(default=False, help_text='A positive result means that the command output was successfully received and processed.', verbose_name='Result status')),
                ('ssh_raw_data_status', models.BooleanField(default=False, help_text='A positive result means that the raw data collection process has been successfully completed.', verbose_name='Raw data status')),
                ('ssh_processed_data_status', models.BooleanField(default=False, help_text='A positive result means that the process of processing the data was completed successfully.', verbose_name='Processed data status')),
                ('ssh_raw_data', models.TextField(blank=True, help_text='CLI command raw data output.', null=True, verbose_name='Command raw data')),
                ('ssh_processed_data', models.JSONField(blank=True, help_text='CLI command FSM process data.', null=True, verbose_name='Command processed data')),
                ('https_response_status', models.BooleanField(default=False, help_text='Xxx.', verbose_name='HTTP(S) response status')),
                ('https_response_code', models.IntegerField(default=0, help_text='Xxx.', verbose_name='HTTP(S) response code')),
                ('https_response', models.JSONField(blank=True, help_text='Xxx.', null=True, verbose_name='HTTP(S) response')),
                ('connection_templates', models.ForeignKey(help_text='Xxx.', on_delete=django.db.models.deletion.PROTECT, to='connector.connectiontemplate', verbose_name='Connection templates')),
                ('credential', models.ForeignKey(help_text='Xxx.', on_delete=django.db.models.deletion.PROTECT, to='inventory.credential', verbose_name='Credential')),
                ('executor', models.ForeignKey(help_text='Xxx.', on_delete=django.db.models.deletion.PROTECT, to='executor.executor', verbose_name='Executor')),
                ('hosts', models.ForeignKey(help_text='Xxx.', on_delete=django.db.models.deletion.PROTECT, to='inventory.host', verbose_name='Hosts')),
            ],
            options={
                'verbose_name': 'Execution',
                'verbose_name_plural': 'Executions',
            },
        ),
        migrations.CreateModel(
            name='ConvertedData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='DataTimeModel create date.', verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, help_text='DataTimeModel last update date.', verbose_name='Updated')),
                ('value', models.CharField(blank=True, help_text='Xxx.', max_length=128, null=True, verbose_name='Value')),
                ('json_value', models.JSONField(blank=True, help_text='Xxx.', null=True, verbose_name='JSON value')),
                ('data_template', models.ForeignKey(help_text='Xxx.', on_delete=django.db.models.deletion.PROTECT, to='connector.datatemplate', verbose_name='Data template')),
                ('execution', models.ForeignKey(help_text='Xxx.', on_delete=django.db.models.deletion.PROTECT, to='executor.execution', verbose_name='Execution')),
                ('snapshot', models.ForeignKey(blank=True, help_text='Xxx.', null=True, on_delete=django.db.models.deletion.PROTECT, to='executor.snapshot', verbose_name='Snapshot')),
            ],
            options={
                'verbose_name': 'Converted data',
                'verbose_name_plural': 'Converted data',
            },
        ),
    ]
