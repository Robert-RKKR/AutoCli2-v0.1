# Generated by Django 4.1.7 on 2023-03-22 20:44

from django.db import migrations, models
import django.db.models.deletion
import inventory.validators.inventory_validator


class Migration(migrations.Migration):

    dependencies = [
        ('inventory', '0011_alter_host_data_collection_protocol'),
    ]

    operations = [
        migrations.AddField(
            model_name='credential',
            name='is_deleted',
            field=models.BooleanField(default=False, help_text='Is Base model object deleted.', verbose_name='Deleted'),
        ),
        migrations.AddField(
            model_name='host',
            name='is_deleted',
            field=models.BooleanField(default=False, help_text='Is Base model object deleted.', verbose_name='Deleted'),
        ),
        migrations.AddField(
            model_name='platform',
            name='is_deleted',
            field=models.BooleanField(default=False, help_text='Is Base model object deleted.', verbose_name='Deleted'),
        ),
        migrations.AddField(
            model_name='region',
            name='is_deleted',
            field=models.BooleanField(default=False, help_text='Is Base model object deleted.', verbose_name='Deleted'),
        ),
        migrations.AddField(
            model_name='site',
            name='is_deleted',
            field=models.BooleanField(default=False, help_text='Is Base model object deleted.', verbose_name='Deleted'),
        ),
        migrations.AlterField(
            model_name='credential',
            name='is_global',
            field=models.BooleanField(default=False, help_text='Global credentials visible to all administrators.', verbose_name='Global credentials'),
        ),
        migrations.AlterField(
            model_name='credential',
            name='password',
            field=models.CharField(blank=True, help_text='Value of the credential password (If both Password and Token are specified, the Token will be used to authenticate HTTP requests).', max_length=128, null=True, verbose_name='Password'),
        ),
        migrations.AlterField(
            model_name='credential',
            name='token',
            field=models.CharField(blank=True, help_text='Value of the credential token (If both Password and Token are specified, the Token will be used to authenticate HTTP requests).', max_length=128, null=True, verbose_name='Token'),
        ),
        migrations.AlterField(
            model_name='credential',
            name='username',
            field=models.CharField(blank=True, help_text='Value of the credential user name.', max_length=128, null=True, verbose_name='Username'),
        ),
        migrations.AlterField(
            model_name='host',
            name='credential',
            field=models.ForeignKey(help_text='Credentials associated with current host.', on_delete=django.db.models.deletion.PROTECT, to='inventory.credential', verbose_name='Credentials'),
        ),
        migrations.AlterField(
            model_name='host',
            name='hostname',
            field=models.CharField(help_text='Valid IP address or domain name used to establish the SSH / HTTP(S) connections.', max_length=128, verbose_name='Hostname'),
        ),
        migrations.AlterField(
            model_name='host',
            name='http_port',
            field=models.IntegerField(default=443, help_text='The TCP port that will be used during the HTTP(S) sessions.', verbose_name='HTTP/S port'),
        ),
        migrations.AlterField(
            model_name='host',
            name='platform',
            field=models.ForeignKey(help_text='Platform associated with current host.', on_delete=django.db.models.deletion.PROTECT, to='inventory.platform', verbose_name='Platform'),
        ),
        migrations.AlterField(
            model_name='host',
            name='site',
            field=models.ForeignKey(blank=True, help_text='Site associated with current host.', null=True, on_delete=django.db.models.deletion.PROTECT, to='inventory.site', verbose_name='Site'),
        ),
        migrations.AlterField(
            model_name='host',
            name='ssh_port',
            field=models.IntegerField(default=22, help_text='The TCP port that will be used during the SSH sessions.', verbose_name='SSH port'),
        ),
        migrations.AlterField(
            model_name='platform',
            name='api_default_header',
            field=models.JSONField(blank=True, help_text='Default heder used during HTTP(S) requests.', null=True, verbose_name='API default heder'),
        ),
        migrations.AlterField(
            model_name='platform',
            name='api_default_params',
            field=models.JSONField(blank=True, help_text='Default parameters used during HTTP(S) requests.', null=True, verbose_name='API default parameters'),
        ),
        migrations.AlterField(
            model_name='region',
            name='code',
            field=models.CharField(blank=True, help_text='Region code (Must contain 2 to 8 letters).', max_length=8, null=True, validators=[inventory.validators.inventory_validator.CodeValueValidator()], verbose_name='Region code'),
        ),
        migrations.AlterField(
            model_name='site',
            name='code',
            field=models.CharField(blank=True, help_text='Site code (Must contain 2 to 8 letters).', max_length=8, null=True, validators=[inventory.validators.inventory_validator.CodeValueValidator()], verbose_name='Site code'),
        ),
        migrations.AlterField(
            model_name='site',
            name='gps_coordinates',
            field=models.CharField(blank=True, help_text='GPS coordinates.', max_length=128, null=True, verbose_name='GPS coordinates'),
        ),
        migrations.AlterField(
            model_name='site',
            name='physical_address',
            field=models.CharField(blank=True, help_text='Physical address.', max_length=128, null=True, verbose_name='Physical address'),
        ),
        migrations.AlterField(
            model_name='site',
            name='region',
            field=models.ForeignKey(blank=True, help_text='Region associated with current site.', null=True, on_delete=django.db.models.deletion.PROTECT, to='inventory.region', verbose_name='Region'),
        ),
    ]
