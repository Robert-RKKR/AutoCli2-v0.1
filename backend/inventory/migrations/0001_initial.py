# Generated by Django 4.1.4 on 2023-02-08 17:32

import autocli2.base.validators.base_validator
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Credential',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(error_messages={'blank': 'Name field is mandatory.', 'invalid': 'Enter the correct name value. It must contain 3 to 64 digits, letters or special characters -, _ or spaces.', 'null': 'Name field is mandatory.', 'unique': 'Object with this name already exists.'}, help_text='Object name.', max_length=64, unique=True, validators=[autocli2.base.validators.base_validator.NameValueValidator()], verbose_name='Name')),
                ('slug', models.CharField(help_text='Object name representation (Slug).', max_length=64, unique=True, verbose_name='Slug')),
                ('description', models.CharField(blank=True, default='Object default description.', error_messages={'invalid': 'Enter the correct description value. It must contain 8 to 256 digits, letters and special characters -, _, . or spaces.'}, help_text='Object description.', max_length=256, null=True, validators=[autocli2.base.validators.base_validator.DescriptionValueValidator()], verbose_name='Description')),
                ('ico', models.IntegerField(default=1, help_text='Object graphical representation.', verbose_name='Object ico')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Object create date.', verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, help_text='object last update date.', verbose_name='Updated')),
                ('is_deleted', models.BooleanField(default=False, help_text='Is object deleted (Deleted object is reserved for backward compatibility).', verbose_name='Deleted')),
                ('is_root', models.BooleanField(default=False, help_text='Is object root (Root object cannot be deleted or modify).', verbose_name='Root')),
                ('is_active', models.BooleanField(default=True, help_text='Is object active (Inactive object has limited functionality).', verbose_name='Active')),
                ('is_global', models.BooleanField(default=False, help_text='Xxx.', verbose_name='Xxxx')),
                ('username', models.CharField(blank=True, help_text='Xxx.', max_length=128, null=True, verbose_name='Username')),
                ('password', models.CharField(blank=True, help_text='Xxx.', max_length=128, null=True, verbose_name='Password')),
                ('token', models.CharField(blank=True, help_text='Xxx.', max_length=128, null=True, verbose_name='Token')),
                ('administrator', models.ForeignKey(blank=True, help_text='Administrator responsible for provided object.', null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Administrator')),
            ],
            options={
                'verbose_name': 'Credential',
                'verbose_name_plural': 'Credentials',
            },
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(error_messages={'blank': 'Name field is mandatory.', 'invalid': 'Enter the correct name value. It must contain 3 to 64 digits, letters or special characters -, _ or spaces.', 'null': 'Name field is mandatory.', 'unique': 'Object with this name already exists.'}, help_text='Object name.', max_length=64, unique=True, validators=[autocli2.base.validators.base_validator.NameValueValidator()], verbose_name='Name')),
                ('slug', models.CharField(help_text='Object name representation (Slug).', max_length=64, unique=True, verbose_name='Slug')),
                ('description', models.CharField(blank=True, default='Object default description.', error_messages={'invalid': 'Enter the correct description value. It must contain 8 to 256 digits, letters and special characters -, _, . or spaces.'}, help_text='Object description.', max_length=256, null=True, validators=[autocli2.base.validators.base_validator.DescriptionValueValidator()], verbose_name='Description')),
                ('ico', models.IntegerField(default=1, help_text='Object graphical representation.', verbose_name='Object ico')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Object create date.', verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, help_text='object last update date.', verbose_name='Updated')),
                ('is_deleted', models.BooleanField(default=False, help_text='Is object deleted (Deleted object is reserved for backward compatibility).', verbose_name='Deleted')),
                ('is_root', models.BooleanField(default=False, help_text='Is object root (Root object cannot be deleted or modify).', verbose_name='Root')),
                ('is_active', models.BooleanField(default=True, help_text='Is object active (Inactive object has limited functionality).', verbose_name='Active')),
            ],
            options={
                'verbose_name': 'Platform',
                'verbose_name_plural': 'Platforms',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(error_messages={'blank': 'Name field is mandatory.', 'invalid': 'Enter the correct name value. It must contain 3 to 64 digits, letters or special characters -, _ or spaces.', 'null': 'Name field is mandatory.', 'unique': 'Object with this name already exists.'}, help_text='Object name.', max_length=64, unique=True, validators=[autocli2.base.validators.base_validator.NameValueValidator()], verbose_name='Name')),
                ('slug', models.CharField(help_text='Object name representation (Slug).', max_length=64, unique=True, verbose_name='Slug')),
                ('description', models.CharField(blank=True, default='Object default description.', error_messages={'invalid': 'Enter the correct description value. It must contain 8 to 256 digits, letters and special characters -, _, . or spaces.'}, help_text='Object description.', max_length=256, null=True, validators=[autocli2.base.validators.base_validator.DescriptionValueValidator()], verbose_name='Description')),
                ('ico', models.IntegerField(default=1, help_text='Object graphical representation.', verbose_name='Object ico')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Object create date.', verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, help_text='object last update date.', verbose_name='Updated')),
                ('is_deleted', models.BooleanField(default=False, help_text='Is object deleted (Deleted object is reserved for backward compatibility).', verbose_name='Deleted')),
                ('is_root', models.BooleanField(default=False, help_text='Is object root (Root object cannot be deleted or modify).', verbose_name='Root')),
                ('is_active', models.BooleanField(default=True, help_text='Is object active (Inactive object has limited functionality).', verbose_name='Active')),
            ],
            options={
                'verbose_name': 'Region',
                'verbose_name_plural': 'Regions',
            },
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(error_messages={'blank': 'Name field is mandatory.', 'invalid': 'Enter the correct name value. It must contain 3 to 64 digits, letters or special characters -, _ or spaces.', 'null': 'Name field is mandatory.', 'unique': 'Object with this name already exists.'}, help_text='Object name.', max_length=64, unique=True, validators=[autocli2.base.validators.base_validator.NameValueValidator()], verbose_name='Name')),
                ('slug', models.CharField(help_text='Object name representation (Slug).', max_length=64, unique=True, verbose_name='Slug')),
                ('description', models.CharField(blank=True, default='Object default description.', error_messages={'invalid': 'Enter the correct description value. It must contain 8 to 256 digits, letters and special characters -, _, . or spaces.'}, help_text='Object description.', max_length=256, null=True, validators=[autocli2.base.validators.base_validator.DescriptionValueValidator()], verbose_name='Description')),
                ('ico', models.IntegerField(default=1, help_text='Object graphical representation.', verbose_name='Object ico')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Object create date.', verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, help_text='object last update date.', verbose_name='Updated')),
                ('is_deleted', models.BooleanField(default=False, help_text='Is object deleted (Deleted object is reserved for backward compatibility).', verbose_name='Deleted')),
                ('is_root', models.BooleanField(default=False, help_text='Is object root (Root object cannot be deleted or modify).', verbose_name='Root')),
                ('is_active', models.BooleanField(default=True, help_text='Is object active (Inactive object has limited functionality).', verbose_name='Active')),
                ('gps_coordinates', models.CharField(blank=True, help_text='Xxx.', max_length=128, null=True, verbose_name='GPS coordinates')),
                ('physical_address', models.CharField(blank=True, help_text='Xxx.', max_length=128, null=True, verbose_name='Physical address')),
                ('region', models.ForeignKey(blank=True, help_text='Region.', null=True, on_delete=django.db.models.deletion.PROTECT, to='inventory.region', verbose_name='Region')),
            ],
            options={
                'verbose_name': 'Site',
                'verbose_name_plural': 'Sites',
            },
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(error_messages={'blank': 'Name field is mandatory.', 'invalid': 'Enter the correct name value. It must contain 3 to 64 digits, letters or special characters -, _ or spaces.', 'null': 'Name field is mandatory.', 'unique': 'Object with this name already exists.'}, help_text='Object name.', max_length=64, unique=True, validators=[autocli2.base.validators.base_validator.NameValueValidator()], verbose_name='Name')),
                ('slug', models.CharField(help_text='Object name representation (Slug).', max_length=64, unique=True, verbose_name='Slug')),
                ('description', models.CharField(blank=True, default='Object default description.', error_messages={'invalid': 'Enter the correct description value. It must contain 8 to 256 digits, letters and special characters -, _, . or spaces.'}, help_text='Object description.', max_length=256, null=True, validators=[autocli2.base.validators.base_validator.DescriptionValueValidator()], verbose_name='Description')),
                ('ico', models.IntegerField(default=1, help_text='Object graphical representation.', verbose_name='Object ico')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Object create date.', verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, help_text='object last update date.', verbose_name='Updated')),
                ('is_deleted', models.BooleanField(default=False, help_text='Is object deleted (Deleted object is reserved for backward compatibility).', verbose_name='Deleted')),
                ('is_root', models.BooleanField(default=False, help_text='Is object root (Root object cannot be deleted or modify).', verbose_name='Root')),
                ('is_active', models.BooleanField(default=True, help_text='Is object active (Inactive object has limited functionality).', verbose_name='Active')),
                ('hostname', models.CharField(blank=True, help_text='Xxx.', max_length=128, null=True, verbose_name='Hostname')),
                ('default_certificate_check', models.BooleanField(default=False, help_text='If enabled, attempts to validate host certificate. If disabled, ignores certificate validation process.', verbose_name='Default certificate check')),
                ('default_http_header', models.JSONField(blank=True, help_text='Xxx.', null=True, verbose_name='Default HTTP heder')),
                ('default_http_params', models.JSONField(blank=True, help_text='Xxx.', null=True, verbose_name='Default HTTP parameters')),
                ('credential', models.ForeignKey(blank=True, help_text='Credentials.', null=True, on_delete=django.db.models.deletion.PROTECT, to='inventory.credential', verbose_name='Credentials')),
                ('platform', models.ForeignKey(blank=True, help_text='Platform.', null=True, on_delete=django.db.models.deletion.PROTECT, to='inventory.platform', verbose_name='Platform')),
                ('site', models.ForeignKey(blank=True, help_text='Site.', null=True, on_delete=django.db.models.deletion.PROTECT, to='inventory.site', verbose_name='Site')),
            ],
            options={
                'verbose_name': 'Host',
                'verbose_name_plural': 'Hosts',
            },
        ),
    ]
